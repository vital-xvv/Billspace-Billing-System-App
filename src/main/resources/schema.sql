/*
  * --- General Rules ---
  * Use underscore_names instead of camelCase
  * Table names should be plural
  * Spell out id fields (item_id instead of id)
  * Don't use ambiguous column names
  * Name foreign key columns the same as the columns they refer to
  * Use caps for all SQL Queries
*/

CREATE SCHEMA IF NOT EXISTS billspace;

SET NAMES 'UTF8MB4';

USE billspace;

#DROP TABLE IF EXISTS Users;
CREATE TABLE IF NOT EXISTS Users
(
  ID               BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
  FIRST_NAME       VARCHAR(80) NOT NULL,
  LAST_NAME        VARCHAR(80) NOT NULL,
  EMAIL            VARCHAR(150) NOT NULL,
  PASSWORD         VARCHAR(255) DEFAULT NULL,
  ADDRESS          VARCHAR(255) DEFAULT NULL,
  PHONE            VARCHAR(20) DEFAULT NULL,
  TITLE            VARCHAR(50) DEFAULT NULL,
  BIO              VARCHAR(255) DEFAULT NULL,
  ENABLED          BOOLEAN DEFAULT FALSE,
  NON_LOCKED       BOOLEAN DEFAULT TRUE,
  USING_MFA        BOOLEAN DEFAULT FALSE,
  IMAGE_URL        VARCHAR(255) DEFAULT 'https://www.shutterstock.com/image-vector/blank-avatar-photo-place-holder-600nw-1114445501.jpg',
  CREATED_AT       DATETIME DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT       UQ_USERS_EMAIL UNIQUE (EMAIL)
);


#DROP TABLE IF EXISTS Roles;
CREATE TABLE IF NOT EXISTS Roles
(
    ID          BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME        VARCHAR(50) NOT NULL UNIQUE,
    PERMISSION  VARCHAR(255) NOT NULL,
    CONSTRAINT  UQ_ROLES_NAME UNIQUE (NAME)
);


#DROP TABLE IF EXISTS UserRoles;
CREATE TABLE IF NOT EXISTS UserRoles
(
    ID         BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USER_ID    BIGINT UNSIGNED NOT NULL,
    ROLE_ID    BIGINT UNSIGNED NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ROLE_ID) REFERENCES Roles(ID) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT  UQ_UserRoles_USER_ID UNIQUE (USER_ID)
);


#DROP TABLE IF EXISTS Events;
CREATE TABLE IF NOT EXISTS Events
(
    ID          BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    TYPE        VARCHAR(50) NOT NULL CHECK ( TYPE IN ('LOGIN_ATTEMPT', 'LOGIN_ATTEMPT_FAILURE', 'LOGIN_ATTEMPT_SUCCESS', 'PROFILE_UPDATE', 'PROFILE_PICTURE_UPDATE', 'ROLE_UPDATE', 'PASSWORD_UPDATE', 'ACCOUNT_SETTINGS_UPDATE', 'MFA_UPDATE') ),
    DESCRIPTION VARCHAR(255) NOT NULL,
    CONSTRAINT  UQ_EVENTS_TYPE UNIQUE (TYPE)
);


#DROP TABLE IF EXISTS UserEvents;
CREATE TABLE IF NOT EXISTS UserEvents
(
    ID         BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USER_ID    BIGINT UNSIGNED NOT NULL,
    EVENT_ID   BIGINT UNSIGNED NOT NULL,
    DEVICE     VARCHAR(100) DEFAULT NULL,
    IP_ADDRESS VARCHAR(100) DEFAULT NULL,
    CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (EVENT_ID) REFERENCES Events(ID) ON DELETE RESTRICT ON UPDATE CASCADE
);


#DROP TABLE IF EXISTS AccountVerifications;
CREATE TABLE IF NOT EXISTS AccountVerifications
(
    ID                  BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USER_ID             BIGINT UNSIGNED NOT NULL,
    URL                 VARCHAR(255) NOT NULL,
    -- expiration_date     DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT UQ_AccountVerifications_URL UNIQUE (URL),
    CONSTRAINT UQ_AccountVerifications_USER_ID UNIQUE (USER_ID)
);


#DROP TABLE IF EXISTS ResetPasswordVerifications;
CREATE TABLE IF NOT EXISTS ResetPasswordVerifications
(
    ID               BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USER_ID          BIGINT UNSIGNED NOT NULL,
    URL              VARCHAR(255) NOT NULL,
    expiration_date  DATETIME NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT UQ_ResetPasswordVerifications_URL UNIQUE (URL),
    CONSTRAINT UQ_ResetPasswordVerifications_USER_ID UNIQUE (USER_ID)
);


#DROP TABLE IF EXISTS TwoFactorVerifications;
CREATE TABLE IF NOT EXISTS TwoFactorVerifications
(
    ID               BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USER_ID          BIGINT UNSIGNED NOT NULL,
    CODE             VARCHAR(10) NOT NULL,
    expiration_date  DATETIME NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES Users(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT UQ_TwoFactorVerifications_CODE UNIQUE (CODE),
    CONSTRAINT UQ_TwoFactorVerifications_USER_ID UNIQUE (USER_ID)
);


Insert Into Roles(name, permission)
Values('ROLE_USER', 'READ:USER,READ:CUSTOMER'),
      ('ROLE_MANAGER', 'READ:USER,READ:CUSTOMER,UPDATE:USER,UPDATE:CUSTOMER'),
      ('ROLE_ADMIN', 'READ:USER,READ:CUSTOMER,UPDATE:USER,UPDATE:CUSTOMER,CREATE:USER,CREATE:CUSTOMER'),
      ('ROLE_SYSADMIN', 'READ:USER,READ:CUSTOMER,UPDATE:USER,UPDATE:CUSTOMER,CREATE:USER,CREATE:CUSTOMER,DELETE:USER,DELETE:CUSTOMER');


